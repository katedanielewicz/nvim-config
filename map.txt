

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 129: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 125: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 123: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 127: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 131: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 125: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 127: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 120: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

n  <CR>        *@<Lua 95: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Details
n  ?           *@<Lua 108: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Toggle this help page
n  C           *@<Lua 112: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  D           *@<Lua 118: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show debug information
n  H           *@<Lua 107: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Go back to plugin list
n  I           *@<Lua 119: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install missing plugins
n  K           *@<Lua 103: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Hover
n  L           *@<Lua 122: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
n  P           *@<Lua 106: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show detailed profiling
n  R           *@<Lua 125: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Updates all plugins to the state in the lockfile. For a single plugin: restore it to the state in the lockfile or to a given commit under the cursor
n  S           *@<Lua 117: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Run install, clean and update
n  U           *@<Lua 126: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update plugins. This will also update the lockfile
n  X           *@<Lua 109: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Clean plugins that are no longer needed
n  [[          *@<Lua 97: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Prev Plugin
n  \i          *@<Lua 102: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Inspect Plugin
n  \l          *@<Lua 101: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Open lazygit log
n  \t          *@<Lua 100: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Open terminal in plugin dir
n  ]]          *@<Lua 96: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Next Plugin
x  c           *@<Lua 114: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  c           *@<Lua 113: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  d           *@<Lua 104: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Diff
x  gl          *@<Lua 124: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
n  gl          *@<Lua 123: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
x  gb          *@<Lua 116: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
n  gb          *@<Lua 115: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
n  gx           @K
x  i           *@<Lua 121: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install a plugin
n  i           *@<Lua 120: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install a plugin
n  q           *@<Lua 82: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Close
n  r           *@<Lua 105: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Restore
x  u           *@<Lua 128: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update a plugin. This will also update the lockfile
n  u           *@<Lua 127: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update a plugin. This will also update the lockfile
x  x           *@<Lua 111: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Delete a plugin. WARNING: this will delete the plugin even if it should be installed!
n  x           *@<Lua 110: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Delete a plugin. WARNING: this will delete the plugin even if it should be installed!
n  <C-F>       *@<Lua 99: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Filter Profile
n  <C-S>       *@<Lua 98: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Sort Profile
n  <C-C>       *@<Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/init.lua:84>
                 Abort
s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 139: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 201: ~\AppData\Local\nvim\init.lua:24>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 138: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 152: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 142: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 79: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 141: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 111: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 145: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 145: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 151: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 104: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

n  <CR>        *@<Lua 95: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Details
n  ?           *@<Lua 107: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Toggle this help page
n  C           *@<Lua 126: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  D           *@<Lua 112: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show debug information
n  H           *@<Lua 122: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Go back to plugin list
n  I           *@<Lua 108: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install missing plugins
n  K           *@<Lua 103: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Hover
n  L           *@<Lua 116: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
n  P           *@<Lua 125: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show detailed profiling
n  R           *@<Lua 106: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Updates all plugins to the state in the lockfile. For a single plugin: restore it to the state in the lockfile or to a given commit under the cursor
n  S           *@<Lua 111: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Run install, clean and update
n  U           *@<Lua 113: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update plugins. This will also update the lockfile
n  X           *@<Lua 119: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Clean plugins that are no longer needed
n  [[          *@<Lua 97: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Prev Plugin
n  \l          *@<Lua 102: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Open lazygit log
n  \i          *@<Lua 101: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Inspect Plugin
n  \t          *@<Lua 100: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Open terminal in plugin dir
n  ]]          *@<Lua 96: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Next Plugin
x  c           *@<Lua 128: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  c           *@<Lua 127: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Check for updates and show the log (git fetch)
n  d           *@<Lua 104: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Diff
x  gb          *@<Lua 124: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
n  gb          *@<Lua 123: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
x  gl          *@<Lua 118: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
n  gl          *@<Lua 117: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Show recent updates
n  gx           @K
x  i           *@<Lua 110: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install a plugin
n  i           *@<Lua 109: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Install a plugin
n  q           *@<Lua 77: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Close
n  r           *@<Lua 105: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Restore
x  u           *@<Lua 115: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update a plugin. This will also update the lockfile
n  u           *@<Lua 114: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Update a plugin. This will also update the lockfile
x  x           *@<Lua 121: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Delete a plugin. WARNING: this will delete the plugin even if it should be installed!
n  x           *@<Lua 120: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Delete a plugin. WARNING: this will delete the plugin even if it should be installed!
n  <C-F>       *@<Lua 99: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Filter Profile
n  <C-S>       *@<Lua 98: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/float.lua:256>
                 Sort Profile
n  <C-C>       *@<Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/view/init.lua:84>
                 Abort
s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 72: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 189: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 134: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 62: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 144: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 134: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 143: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
v  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:11>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 148: ~\AppData\Local\nvim\init.lua:42>
                 Find visual selection
v  fg          * <Lua 147: ~\AppData\Local\nvim\init.lua:31>
                 Grep visual selection
n  ff          * <Lua 145: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:12>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 152: ~\AppData\Local\nvim\init.lua:42>
                 Find visual selection
v  fg          * <Lua 151: ~\AppData\Local\nvim\init.lua:31>
                 Grep visual selection
n  ff          * <Lua 149: ~\AppData\Local\nvim\init.lua:22>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:12>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 144: ~\AppData\Local\nvim\init.lua:47>
                 Find visual selection
v  fg          * <Lua 143: ~\AppData\Local\nvim\init.lua:36>
                 Grep visual selection
n  ff          * <Lua 141: ~\AppData\Local\nvim\init.lua:27>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:17>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
v  ff          * <Lua 79: ~\AppData\Local\nvim\init.lua:47>
                 Find visual selection
v  fg          * <Lua 78: ~\AppData\Local\nvim\init.lua:36>
                 Grep visual selection
n  ff          * <Lua 77: ~\AppData\Local\nvim\init.lua:27>
                 Find visual selection
n  fg          * <Lua 76: ~\AppData\Local\nvim\init.lua:17>
                 Grep visual selection
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
v  ff          * <Lua 79: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 78: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 77: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 76: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
v  ff          * <Lua 79: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 78: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 77: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 76: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
v  ff          * <Lua 79: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 78: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 77: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 76: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
v  ff          * <Lua 80: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 79: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 78: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 76: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 153: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 152: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 94: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 93: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 136: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 135: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 133: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 84: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 156: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 155: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 153: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 148: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 147: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 145: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 84: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 149: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:28>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:18>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 84: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 153: ~\AppData\Local\nvim\init.lua:52>
                 Find visual selection
v  fg          * <Lua 152: ~\AppData\Local\nvim\init.lua:41>
                 Grep visual selection
n  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:32>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:52>
                 Find visual selection
v  fg          * <Lua 149: ~\AppData\Local\nvim\init.lua:41>
                 Grep visual selection
n  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:32>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 151: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 150: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 148: ~\AppData\Local\nvim\init.lua:30>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 144: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 143: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 141: ~\AppData\Local\nvim\init.lua:30>
                 Find visual selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep visual selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 84: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 149: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 140: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 136: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 118: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 85: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 150: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 149: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 147: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 144: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 143: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 141: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 106: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 105: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 103: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 89: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 142: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 141: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 139: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-A>       * <Lua 92: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-X>       * <Lua 91: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 90: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 144: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 143: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 141: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 88: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default

s  <Tab>       * <Lua 26: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <Tab>
x  #           * <Lua 9: vim/_defaults.lua:87>
                 :help v_#-default
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
n  &           * :&&<CR>
                 :help &-default
x  *           * <Lua 4: vim/_defaults.lua:84>
                 :help v_star-default
x  @           * mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'
                 :help v_@-default
n  J           * <Lua 87: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
                 Join Toggle
x  Q           * mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'
                 :help v_Q-default
n  Y           * y$
                 :help Y-default
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
n  [<Space>    * <Lua 60: vim/_defaults.lua:427>
                 Add empty line above cursor
n  [B          * <Lua 58: vim/_defaults.lua:410>
                 :brewind
n  [b          * <Lua 56: vim/_defaults.lua:402>
                 :bprevious
n  [<C-T>      * <Lua 54: vim/_defaults.lua:391>
                  :ptprevious
n  [T          * <Lua 52: vim/_defaults.lua:377>
                 :trewind
n  [t          * <Lua 50: vim/_defaults.lua:367>
                 :tprevious
n  [A          * <Lua 48: vim/_defaults.lua:350>
                 :rewind
n  [a          * <Lua 46: vim/_defaults.lua:341>
                 :previous
n  [<C-L>      * <Lua 44: vim/_defaults.lua:332>
                 :lpfile
n  [L          * <Lua 42: vim/_defaults.lua:324>
                 :lrewind
n  [l          * <Lua 40: vim/_defaults.lua:316>
                 :lprevious
n  [<C-Q>      * <Lua 38: vim/_defaults.lua:307>
                 :cpfile
n  [Q          * <Lua 36: vim/_defaults.lua:299>
                 :crewind
n  [q          * <Lua 34: vim/_defaults.lua:291>
                 :cprevious
n  [D          * <Lua 32: vim/_defaults.lua:263>
                 Jump to the first diagnostic in the current buffer
n  [d          * <Lua 30: vim/_defaults.lua:255>
                 Jump to the previous diagnostic in the current buffer
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  ]<Space>    * <Lua 61: vim/_defaults.lua:433>
                 Add empty line below cursor
n  ]B          * <Lua 59: vim/_defaults.lua:418>
                 :blast
n  ]b          * <Lua 57: vim/_defaults.lua:406>
                 :bnext
n  ]<C-T>      * <Lua 55: vim/_defaults.lua:396>
                 :ptnext
n  ]T          * <Lua 53: vim/_defaults.lua:382>
                 :tlast
n  ]t          * <Lua 51: vim/_defaults.lua:372>
                 :tnext
n  ]A          * <Lua 49: vim/_defaults.lua:358>
                 :last
n  ]a          * <Lua 47: vim/_defaults.lua:345>
                 :next
n  ]<C-L>      * <Lua 45: vim/_defaults.lua:336>
                 :lnfile
n  ]L          * <Lua 43: vim/_defaults.lua:328>
                 :llast
n  ]l          * <Lua 41: vim/_defaults.lua:320>
                 :lnext
n  ]<C-Q>      * <Lua 39: vim/_defaults.lua:311>
                 :cnfile
n  ]Q          * <Lua 37: vim/_defaults.lua:303>
                 :clast
n  ]q          * <Lua 35: vim/_defaults.lua:295>
                 :cnext
n  ]D          * <Lua 31: vim/_defaults.lua:259>
                 Jump to the last diagnostic in the current buffer
n  ]d          * <Lua 29: vim/_defaults.lua:251>
                 Jump to the next diagnostic in the current buffer
x  a%            <Plug>(MatchitVisualTextObject)
v  ff          * <Lua 146: ~\AppData\Local\nvim\init.lua:48>
                 Find visual selection
v  fg          * <Lua 145: ~\AppData\Local\nvim\init.lua:37>
                 Grep visual selection
n  ff          * <Lua 143: ~\AppData\Local\nvim\init.lua:30>
                 Find normal selection
n  fg          * <Lua 80: ~\AppData\Local\nvim\init.lua:22>
                 Grep normal selection
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gO          * <Lua 22: vim/_defaults.lua:216>
                 vim.lsp.buf.document_symbol()
n  grt         * <Lua 21: vim/_defaults.lua:212>
                 vim.lsp.buf.type_definition()
n  gri         * <Lua 20: vim/_defaults.lua:208>
                 vim.lsp.buf.implementation()
n  grr         * <Lua 19: vim/_defaults.lua:204>
                 vim.lsp.buf.references()
x  gra         * <Lua 18: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  gra         * <Lua 17: vim/_defaults.lua:200>
                 vim.lsp.buf.code_action()
n  grn         * <Lua 16: vim/_defaults.lua:196>
                 vim.lsp.buf.rename()
o  gc          * <Lua 15: vim/_defaults.lua:182>
                 Comment textobject
n  gcc         * <Lua 14: vim/_defaults.lua:177>
                 Toggle comment line
x  gc          * <Lua 13: vim/_defaults.lua:172>
                 Toggle comment
n  gc          * <Lua 12: vim/_defaults.lua:172>
                 Toggle comment
x  gx          * <Lua 11: vim/_defaults.lua:157>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
n  gx          * <Lua 10: vim/_defaults.lua:149>
                 Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
x  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
x  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
x  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
x  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
x  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") | exe ":normal! m'" | endif<CR>gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
n  <Plug>PlenaryTestFile * :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
n  <C-X>       * <Lua 86: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-A>       * <Lua 84: ~/AppData/Local/nvim-data/lazy/lazy.nvim/lua/lazy/core/handler/keys.lua:121>
n  <C-W><C-D>    <C-W>d
                 Show diagnostics under the cursor
n  <C-W>d      * <Lua 33: vim/_defaults.lua:267>
                 Show diagnostics under the cursor
s  <S-Tab>     * <Lua 28: vim/_defaults.lua:229>
                 vim.snippet.jump if active, otherwise <S-Tab>
s  <C-S>       * <Lua 24: vim/_defaults.lua:220>
                 vim.lsp.buf.signature_help()
n  <C-L>       * <Cmd>nohlsearch|diffupdate|normal! <C-L><CR>
                 :help CTRL-L-default